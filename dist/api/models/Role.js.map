{"version":3,"sources":["models/Role.js"],"names":[],"mappings":";;;;;;;;;;;AASA,MAAM,CAAC,OAAO,GAAG;AACf,eAAa,EAAE,KAAK;;AAEpB,aAAW,EAAE,gCAAgC;;AAE7C,YAAU,EAAE;AACV,QAAI,EAAE;AACJ,UAAI,EAAE,QAAQ;AACd,WAAK,EAAE,IAAI;AACX,aAAO,EAAE,IAAI;AACb,YAAM,EAAE,IAAI;KACb;AACD,SAAK,EAAE;AACL,gBAAU,EAAE,MAAM;AAClB,SAAG,EAAE,OAAO;KACb;AACD,UAAM,EAAE;AACN,UAAI,EAAE,SAAS;AACf,gBAAU,EAAE,IAAI;AAChB,WAAK,EAAE,IAAI;KACZ;AACD,eAAW,EAAE;AACX,gBAAU,EAAE,YAAY;AACxB,SAAG,EAAE,MAAM;KACZ;GACF;CACF,CAAC","file":"Role.js","sourcesContent":["/**\n * @module Role\n *\n * @description\n *   Roles endow Users with Permissions. Exposes Postgres-like API for\n *   resolving granted Permissions for a User.\n *\n * @see <http://www.postgresql.org/docs/9.3/static/sql-grant.html>\n */\nmodule.exports = {\n  autoCreatedBy: false,\n\n  description: 'Confers `Permission` to `User`',\n\n  attributes: {\n    name: {\n      type: 'string',\n      index: true,\n      notNull: true,\n      unique: true\n    },\n    users: {\n      collection: 'User',\n      via: 'roles'\n    },\n    active: {\n      type: 'boolean',\n      defaultsTo: true,\n      index: true\n    },\n    permissions: {\n      collection: 'Permission',\n      via: 'role'\n    }\n  }\n};\n"]}
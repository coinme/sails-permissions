{"version":3,"sources":["policies/AuditPolicy.js"],"names":[],"mappings":";;AAAA,IAAI,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9B,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;;AAEzB,MAAM,CAAC,OAAO,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACzC,MAAI,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAK,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,CAAC,aAAa,AAAC,CAAC;AACnG,KAAG,CAAC,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,SAAS,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;;AAEtE,OAAK,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC;AAC7B,MAAE,EAAE,GAAG,CAAC,SAAS;AACjB,aAAS,EAAE,SAAS;AACpB,OAAG,EAAE,kBAAkB,CAAC,GAAG,CAAC;AAC5B,UAAM,EAAE,GAAG,CAAC,MAAM;AAClB,QAAI,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,UAAU,CAAC;AAClC,SAAK,EAAE,GAAG,CAAC,OAAO,CAAC,aAAa;AAChC,QAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,EAAE,CAAA,CAAE,EAAE;GAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;;;AAGpB,MAAI,EAAE,CAAC;CACR,CAAC;;AAEF,SAAS,kBAAkB,CAAE,GAAG,EAAE;AAChC,MAAI,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC;AAC1B,YAAQ,EAAE,GAAG,CAAC,QAAQ;AACtB,QAAI,EAAE,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,EAAE;AACjC,YAAQ,EAAE,GAAG,CAAC,WAAW,IAAI,GAAG,CAAC,GAAG;AACpC,SAAK,EAAE,GAAG,CAAC,KAAK;GACjB,CAAC,CAAC;;AAEH,SAAO,UAAU,CAAC,OAAO,CAAC,uBAAuB,EAAE,cAAc,CAAC,CAAC;CACpE","file":"AuditPolicy.js","sourcesContent":["var fnv = require('fnv-plus');\nvar _ = require('lodash');\nvar url = require('url');\n\nmodule.exports = function (req, res, next) {\n  var ipAddress = req.headers['x-forwarded-for'] || (req.connection && req.connection.remoteAddress);\n  req.requestId = fnv.hash(new Date().valueOf() + ipAddress, 128).str();\n\n  sails.models.requestlog.create({\n    id: req.requestId,\n    ipAddress: ipAddress,\n    url: sanitizeRequestUrl(req),\n    method: req.method,\n    body: _.omit(req.body, 'password'),\n    model: req.options.modelIdentity,\n    user: (req.user || {}).id\n  }).exec(_.identity);\n\n  // persist RequestLog entry in the background; continue immediately\n  next();\n};\n\nfunction sanitizeRequestUrl (req) {\n  var requestUrl = url.format({\n    protocol: req.protocol,\n    host: req.host || sails.getHost(),\n    pathname: req.originalUrl || req.url,\n    query: req.query\n  });\n\n  return requestUrl.replace(/(password=).*?(&|$)/ig, '$1<hidden>$2');\n}\n"]}